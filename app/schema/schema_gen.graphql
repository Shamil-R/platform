## Code generated by platform, DO NOT EDIT.

directive @primary on FIELD_DEFINITION

directive @unique on FIELD_DEFINITION

directive @identity on FIELD_DEFINITION

directive @validate(
  min: Int
  max: Int
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

type User {
    id: Int! @primary @identity
    name: String! @validate(min: 5) @validate(max: 30)
    # roles: [RoleObject!]!
    # materials: [Material!]!
}

# type RoleObject {
#     id: Int! @primary @identity
#     object: String!
#     access: RoleAccess!
# }

type Material {
    id: Int! @primary @identity
    name: String! @validate(
        min: 10
        max: 20
    )
}

# """
# Уровни доступа
# """
# enum RoleAccess {
#     """
#     Создание
#     """
#     CREATE
#     """
#     Чтение
#     """
#     READ
#     UPDATE
#     DELETE
# }

input UserCreateInput {
    name: String!
    @validate(
        min: 5
    )
    @validate(
        max: 30
    )
}

input UserUpdateInput {
    name: String!
    @validate(
        min: 5
    )
    @validate(
        max: 30
    )
}

input UserWhereUniqueInput {
    id: Int!
}

input UserWhereInput {
    id: Int!
    name: String!
}

input MaterialCreateInput {
    name: String!
    @validate(
        min: 10
        max: 20
    )
}

input MaterialUpdateInput {
    name: String!
    @validate(
        min: 10
        max: 20
    )
}

input MaterialWhereUniqueInput {
    id: Int!
}

input MaterialWhereInput {
    id: Int!
    name: String!
}

type Mutation {
    createMaterial(data: MaterialCreateInput!): Material
    updateMaterial(data: MaterialUpdateInput!, where: MaterialWhereUniqueInput!): Material
    deleteMaterial(where: MaterialWhereUniqueInput!): Material
    createUser(data: UserCreateInput!): User
    updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
    deleteUser(where: UserWhereUniqueInput!): User
}

type Query {
    material(where: MaterialWhereUniqueInput!): Material
    materials(where: MaterialWhereInput): [Material]!
    user(where: UserWhereUniqueInput!): User
    users(where: UserWhereInput): [User]!
}
