# Code generated by platform, DO NOT EDIT.
type Material @table(name: "co_material") {
	id: Int! @primary @identity
	name: String! @validate(min: 10 max: 20)
}

type User {
	id: Int! @primary @identity
	name: String! @validate(min: 5 max: 30)
	materials(where: MaterialWhereInput): [Material!]
}

type Person @table(name: "co_person") {
	id: Int! @primary @identity
	name: String
	surname: String
	phone: String @field(name: "home_phone")
}


input UserCreateInput {
	name: String! @validate(min: 5 max: 30)
}

input UserUpdateInput {
	name: String! @validate(min: 5 max: 30)
}

input UserWhereUniqueInput {
	id: Int! @primary @identity
}

input UserWhereInput {
	id: Int! @primary @identity
}

input PersonCreateInput {
	name: String
	surname: String
	phone: String @field(name: "home_phone")
}

input PersonUpdateInput {
	name: String
	surname: String
	phone: String @field(name: "home_phone")
}

input PersonWhereUniqueInput {
	id: Int! @primary @identity
}

input PersonWhereInput {
	id: Int! @primary @identity
}

input MaterialCreateInput {
	name: String! @validate(min: 10 max: 20)
}

input MaterialUpdateInput {
	name: String! @validate(min: 10 max: 20)
}

input MaterialWhereUniqueInput {
	id: Int! @primary @identity
}

input MaterialWhereInput {
	id: Int! @primary @identity
}

type Mutation {
    createUser(data: UserCreateInput!): User!
    updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
    deleteUser(where: UserWhereUniqueInput!): User
    upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User
    createPerson(data: PersonCreateInput!): Person!
    updatePerson(data: PersonUpdateInput!, where: PersonWhereUniqueInput!): Person
    deletePerson(where: PersonWhereUniqueInput!): Person
    upsertPerson(where: PersonWhereUniqueInput!, create: PersonCreateInput!, update: PersonUpdateInput!): Person
    createMaterial(data: MaterialCreateInput!): Material!
    updateMaterial(data: MaterialUpdateInput!, where: MaterialWhereUniqueInput!): Material
    deleteMaterial(where: MaterialWhereUniqueInput!): Material
    upsertMaterial(where: MaterialWhereUniqueInput!, create: MaterialCreateInput!, update: MaterialUpdateInput!): Material
}

type Query {
    user(where: UserWhereUniqueInput!): User
    users(where: UserWhereInput, skip: Int, first: Int, last: Int): [User]!
    person(where: PersonWhereUniqueInput!): Person
    people(where: PersonWhereInput, skip: Int, first: Int, last: Int): [Person]!
    material(where: MaterialWhereUniqueInput!): Material
    materials(where: MaterialWhereInput, skip: Int, first: Int, last: Int): [Material]!
}
