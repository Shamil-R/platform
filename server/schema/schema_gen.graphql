## Code generated by platform, DO NOT EDIT.


type Material {
    id: Int!
    name: String!
}

input MaterialCreateInput {
    id: Int!
    name: String!
}

input MaterialUpdateInput {
    id: Int!
    name: String!
}

input MaterialWhereUniqueInput {
    id: ID
}

input MaterialWhereInput {
    id: ID
}


# Уровни доступа
enum RoleAccess {
    # Уровни доступа
    CREATE
    READ
    UPDATE
    DELETE
}

type RoleObject {
    id: Int!
    object: String!
    access: RoleAccess!
}

input RoleObjectCreateInput {
    id: Int!
    object: String!
    access: RoleAccess!
}

input RoleObjectUpdateInput {
    id: Int!
    object: String!
    access: RoleAccess!
}

input RoleObjectWhereUniqueInput {
    id: ID
}

input RoleObjectWhereInput {
    id: ID
}

type User {
    id: Int!
    name: String!
    roles: [RoleObject!]!
    materials: [Material!]!
}

input UserCreateInput {
    id: Int!
    name: String!
}

input UserUpdateInput {
    id: Int!
    name: String!
}

input UserWhereUniqueInput {
    id: ID
}

input UserWhereInput {
    id: ID
}


type Mutation {
    createMaterial(data: MaterialCreateInput!): Material!
    updateMaterial(data: MaterialUpdateInput!, where: MaterialWhereUniqueInput!): Material
    deleteMaterial(where: MaterialWhereUniqueInput!): Material
    createRoleAccess(data: RoleAccessCreateInput!): RoleAccess!
    updateRoleAccess(data: RoleAccessUpdateInput!, where: RoleAccessWhereUniqueInput!): RoleAccess
    deleteRoleAccess(where: RoleAccessWhereUniqueInput!): RoleAccess
    createRoleObject(data: RoleObjectCreateInput!): RoleObject!
    updateRoleObject(data: RoleObjectUpdateInput!, where: RoleObjectWhereUniqueInput!): RoleObject
    deleteRoleObject(where: RoleObjectWhereUniqueInput!): RoleObject
    createUser(data: UserCreateInput!): User!
    updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
    deleteUser(where: UserWhereUniqueInput!): User
}

type Query {
    material(where: MaterialWhereUniqueInput!): Material
    materials(where: MaterialWhereInput): [Material]!
    roleaccess(where: RoleAccessWhereUniqueInput!): RoleAccess
    roleaccesses(where: RoleAccessWhereInput): [RoleAccess]!
    roleobject(where: RoleObjectWhereUniqueInput!): RoleObject
    roleobjects(where: RoleObjectWhereInput): [RoleObject]!
    user(where: UserWhereUniqueInput!): User
    users(where: UserWhereInput): [User]!
}
