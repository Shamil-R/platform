	{{- define "table" }}
	{{- if .IsSlice }}
	{{- lower .Elem.Name }}
	{{- else }}
	{{- lower .Name }}
	{{- end }}
	{{- end }}

	{{- define "type" }}
	{{- if .IsSlice }}[]
	{{- template "type" .Elem }}
	{{- else }}
	{{- if not .NonNull }}*{{ end }}model.{{ .NamedType }}
	{{- end }}
	{{- end -}}

	tx, err := mssql.Begin(ctx)
	if err != nil {
		return nil, err
	}

	querySelect := `
		SELECT * FROM [{{ template "table" .FieldDefinition.Type }}]
		WHERE {{ lower .Definition.Name }}_id = :id
	`

	argSelect := map[string]interface{}{
		"id": obj.ID,
	}

	stmt, err := tx.PrepareNamed(querySelect)
	if err != nil {
		return nil, err
	}

	resSelect := {{ template "type" .FieldDefinition.Type }}{}

	{{- if .FieldDefinition.Type.IsSlice }}
	if err := stmt.Select(&resSelect, argSelect); err != nil {
		return nil, err
	}

	return resSelect, nil
	{{- else }}
	if err := stmt.Get(&resSelect, argSelect); err != nil {
		return nil, err
	}

	return &resSelect, nil
	{{- end }}