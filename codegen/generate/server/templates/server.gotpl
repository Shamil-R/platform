// Code generated by platform, DO NOT EDIT.

package {{ .Server.Package }}

import (
	graph "{{ .Exec.Import }}"
	service "{{ .Service.Import }}"
)

func init() {
	cfg := graph.Config{
		Resolvers: &resolver{},
	}
	schema = graph.NewExecutableSchema(cfg)
}

type resolver struct{}

func (r *resolver) Mutation() graph.MutationResolver {
	return &struct {
		{{- range .Types.Objects }}
		service.{{ .Name }}MutationService
		{{- end }}
	} {
		{{- range .Types.Objects }}
		{{ .Name }}MutationService: service.New{{ .Name }}MutationService(),
		{{- end }}
	}
}

func (r *resolver) Query() graph.QueryResolver {
	return &struct {
		{{- range .Types.Objects }}
		service.{{ .Name }}QueryService
		{{- end }}
	} {
		{{- range .Types.Objects }}
		{{ .Name }}QueryService: service.New{{ .Name }}QueryService(),
		{{- end }}
	}
}

{{- range $i, $def := .Types.Objects }}
{{- if .Fields.HasRelation }}
func (r *resolver) {{ $def.Name }}() graph.{{ $def.Name }}Resolver {
	return service.New{{ $def.Name }}RelationService()
}
{{- end }}
{{ end }}