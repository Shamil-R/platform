{{- define "mutation" }}
type Mutation {
{{- range . }}
	create{{ .Name }}(data: {{ .Name }}CreateInput!): {{ .Name }}!
	upsert{{ .Name }}(where: {{ .Name }}WhereUniqueInput!, create: {{ .Name }}CreateInput!, update: {{ .Name }}UpdateInput!): {{ .Name }}
	update{{ .Name }}(data: {{ .Name }}UpdateInput!, where: {{ .Name }}WhereUniqueInput!): {{ .Name }}
	updateMany{{ plural .Name }}(data: {{ .Name }}UpdateInput!, where: {{ .Name }}WhereInput): [{{ .Name }}]
	forceDelete{{ .Name }}(where: {{ .Name }}WhereUniqueInput!): {{ .Name }}
	forceDeleteMany{{ plural .Name }}(where: {{ .Name }}WhereInput): [{{ .Name }}]
	{{- $type := . }}
	{{- /* Рассматриваем директиву softDelete */}}
	{{- with .Directives.ByName "softDelete" }}
		{{- /* Проверяем не запрещена ли директива */}}
		{{- with .Arguments.ByName `disable` }}
			{{- if ne .Value.Raw "true" }}
			{{- template "soft_delete_mutation" $type }}
			{{- end }}
		{{- else }}
		{{- template "soft_delete_mutation" $type }}
		{{- end }}
	{{- end }}
{{- end }}
}
{{- end }}